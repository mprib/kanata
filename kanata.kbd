;; kanata.kbd - Minimal Configuration Example (Simpler Caps Lock Toggle)

#|
This is a minimal Kanata configuration file.
It starts with a standard QWERTY layout and applies only the
following custom modifications:

1.  Caps Lock (Tap)         -> Escape
2.  Caps Lock (Hold) + ;    -> Enter
3.  Caps Lock (Hold) + c    -> Caps Lock (Toggle)  <-- NEW METHOD
4.  Left Shift + Space      -> Backspace

This approach prioritizes simplicity by placing the Caps Lock
toggle function onto the temporary layer accessed by holding
the physical Caps Lock key.
|#

;; Global Configuration Settings
(defcfg
  ;; IMPORTANT: If on Linux, uncomment and edit the following line to specify
  ;; your keyboard device(s). Find device names in /dev/input/by-id/ or /dev/input/by-path/
  ;; linux-dev /dev/input/by-id/your-keyboard-device-name

  ;; On Windows using the interception driver (kanata-wintercept), you might
  ;; need to specify keyboard hardware IDs later.
  ;; windows-interception-keyboard-hwids ("...")

  ;; On macOS, you might need device name filters later:
  ;; macos-dev-names-include ("...")

  ;; Required for layer transparency (_) and overrides.
  process-unmapped-keys yes
)

;; Source Layout Definition (Standard US ANSI QWERTY)
(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet rctl
)

;; Alias Definitions
(defalias
  ;; Define the behavior for the physical Caps Lock key:
  ;; - Tap sends Escape.
  ;; - Hold activates 'caps-hold-layer' temporarily.
  ;; Adjust 200ms timeout if needed.
  caps_esc_hold (tap-hold 200 200 esc (layer-toggle caps-hold-layer))
)

;; Layer Definitions

;; Base Layer (Default)
;; Standard QWERTY, but Caps Lock uses our alias.
(deflayer base
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  @caps_esc_hold a s d f g h j k l ; ' ret  ;; Caps Lock position uses our alias
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet rctl
)

;; Caps-Hold Layer
;; Active *only* while the physical Caps Lock key is held.
;; Defines actions for keys pressed *while* Caps Lock is held.
(deflayer caps-hold-layer
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    ret  _    _    ;; Semicolon -> Enter ('ret')
  _    _    caps _    _    _    _    _    _    _    _    _          ;; 'c' -> Caps Lock toggle ('caps')
  _    _    _              _              _    _    _
)


;; Overrides Definition
;; Only handles Left Shift + Space now.
(defoverrides
  ;; If Left Shift is held AND the physical Space key is pressed,
  ;; send the Backspace action. Remember the parentheses!
  (lsft spc)  (bspc)
)

;; --- End of File ---